[[plugins]]
repo = 'vim-scripts/vim-coffee-script'
on_ft = ['coffee']
[[plugins]]
repo = 'awetzel/elixir.nvim'
on_ft = ['elixir']
build = '''./install.sh'''
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']
[[plugins]]
repo = 'chase/vim-ansible-yaml'
on_ft = ['ansible']
[[plugins]]
repo = 'dag/vim-fish'
on_ft = ['fish']
[[plugins]]
repo = 'elixir-lang/vim-elixir'
on_ft = ['elixir']
[[plugins]]
repo  = 'elzr/vim-json'
on_ft = ['json']
[[plugins]]
repo  = 'fatih/vim-go'
on_ft = ['go']
[[plugins]]
repo = 'flowtype/vim-flow'
on_ft = ['javascript', 'javascript.jsx']
hook_add = '''
let g:flow#flowpath = '/usr/local/bin/flow'
'''
[[plugins]]
repo = 'itmammoth/run-rspec.vim'
on_ft = ['ruby']
[[plugins]]
repo  = 'leafgarland/typescript-vim'
on_ft = ['typescript']
[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex']
[[plugins]]
repo = 'lervag/vim-latex'
on_ft = ['tex']
[[plugins]]
repo = 'othree/es.next.syntax.vim'
on_ft = ['javascript', 'javascript.jsx']
[[plugins]]
repo = 'othree/javascript-libraries-syntax.vim'
on_ft = ['javascript', 'javascript.jsx']
[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript', 'javascript.jsx']
[[plugins]]
repo  = 'rhysd/vim-crystal'
on_ft = ['crystal']
[[plugins]]
repo  = 'scrooloose/nerdtree'
on_cmd = ['NERDTreeToggle']
[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim']
on_event = 'BufRead'
hook_add = '''
hi deniteMatchedChar ctermfg=5 guifg=SlateBlue
nmap <silent> ,r :<C-u>Denite file_rec<CR>
nmap <silent> ,g :<C-u>Denite grep<CR>
nmap <silent> ,y :<C-u>Denite neoyank<CR>
nmap <silent> <C-u><C-t> :<C-u>Denite filetype<CR>
nmap <silent> <C-u><C-j> :<C-u>Denite line<CR>
nmap <silent> <C-u><C-]> :<C-u>DeniteCursorWord grep<CR>
nmap <silent> <C-u><C-u> :<C-u>Denite file_mru<CR>
nmap <silent> <C-u><C-r> :<C-u>Denite -resume<CR>
nmap <silent> <C-u><C-b> :<C-u>Denite buffer<CR>
nmap <silent> <C-u>; :<C-u>Denite -resume -immediately -select=+1<CR>
nmap <silent> <C-u>- :<C-u>Denite -resume -immediately -select=-1<CR>
nmap <silent> <C-u><C-d> :<C-u>call denite#start([{'name': 'file_rec', 'args': ['~/dotfiles']}])<CR>
nmap ml :<C-u>call denite#start([{'name': 'file_rec', 'args': [g:memolist_path]}])<CR>
nmap <silent> ,rc :<C-u>Denite -path=`husq#git#root()`/app/controllers        file_rec<CR>
nmap <silent> ,rd :<C-u>Denite -path=`husq#git#root()`/db                     file_rec<CR>
nmap <silent> ,rh :<C-u>Denite -path=`husq#git#root()`/app/helpers            file_rec<CR>
nmap <silent> ,ri :<C-u>Denite -path=`husq#git#root()`/config/initializers    file_rec<CR>
nmap <silent> ,rj :<C-u>Denite -path=`husq#git#root()`/app/assets/javascripts file_rec<CR>
nmap <silent> ,rm :<C-u>Denite -path=`husq#git#root()`/app/models             file_rec<CR>
nmap <silent> ,rs :<C-u>Denite -path=`husq#git#root()`/app/assets/stylesheets file_rec<CR>
nmap <silent> ,rt :<C-u>Denite -path=`husq#git#root()`/spec                   file_rec<CR>
nmap <silent> ,rv :<C-u>Denite -path=`husq#git#root()`/app/views              file_rec<CR>
nmap <silent> ,git :<C-u>Denite                                         file_rec/git<CR>
'''
hook_post_source = '''
call denite#custom#option('default', 'prompt', '>')
call denite#custom#alias('source', 'file_rec/git', 'file_rec')
call denite#custom#var('file_rec/git', 'command', ['git', 'ls-files', '-co', '--exclude-standard'])
call denite#custom#var('file_rec', 'command', ['pt', '--follow', '--nocolor', '--nogroup', '--hidden', '-g', ''])
call denite#custom#var('grep', 'command', ['pt', '--nogroup', '--nocolor', '--smart-case', '--hidden'])
call denite#custom#var('grep', 'default_opts', [])
call denite#custom#var('grep', 'recursive_opts', [])
call denite#custom#var('grep', 'pattern_opt', [])
call denite#custom#map('insert', "\<C-n>", '<denite:move_to_next_line>')
call denite#custom#map('insert', "\<C-p>", '<denite:move_to_prev_line>')
call denite#custom#map('insert', "\<C-f>", '<denite:scroll_page_forwards>')
call denite#custom#map('insert', "\<C-u>", '<denite:scroll_window_upwards>')
call denite#custom#map('insert', "\<C-b>", '<denite:scroll_page_backwards>')
call denite#custom#map('insert', "\<C-d>", '<denite:scroll_window_downwards>')
'''
[[plugins]]
repo  = 'Shougo/deoplete.nvim'
on_i = 1
hook_add = '''
let g:deoplete#enable_at_startup = 1
let g:deoplete#sources = {}
let g:deoplete#sources._ = ['buffer', 'tag']
let g:deoplete#omni_patterns = {}
let g:deoplete#omni_patterns.ruby = ['[^. *\t]\.\w*','\h\w*::']
imap <expr><tab> pumvisible() ? "\<C-n>" :
  \ neosnippet#expandable_or_jumpable() ?
  \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
[[plugins]]
repo = 'Shougo/neomru.vim'
on_path = '.*'
hook_add = '''
let g:neomru#file_mru_limit = 10000
'''
[[plugins]]
repo = 'Shougo/neosnippet'
on_ft = ['snippet']
depends = ['neosnippet-snippets']
on_i = 1
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_i = 1
[[plugins]]
repo = 'Shougo/neoyank.vim'
on_path = '.*'
hook_add = '''
let g:neoyank#limit = 10000
'''
[[plugins]]
repo  = 'slim-template/vim-slim'
on_ft = ['slim']
[[plugins]]
repo  = 'tpope/vim-endwise'
on_ft = ['ruby']
[[plugins]]
repo  = 'tpope/vim-rails'
on_ft = ['ruby']
[[plugins]]
repo = 'maxmellon/vim-jsx-pretty'
on_ft = ['javascript', 'javascript.jsx']
